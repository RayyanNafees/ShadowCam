---
---

<div class="camera">
  <video id="video">Video stream not available.</video>
  <button id="startbutton">Take photo</button>
  <a download>
    <button id="download">Download</button>
  </a>
  <a target="_blank" onclick="this.href=photo.getAttribute('src')"
    ><button id="preview">Preview</button></a
  >

  <p>
    Bright: <input
      type="range"
      id="brightness"
      min="0.5"
      max="2"
      step="0.01"
      value="1"
    />
    <span id="data"></span>
  </p>
</div>
<input type="file" />
<canvas id="canvas"> </canvas>
<div class="output">
  <svg>
    <image id="photo" width="212px" height="161px" />
  </svg>
</div>

<script>
  import Q from "../utils";

  var width = 320; // We will scale the photo width to this
  var height = 0; // This will be computed based on the input stream

  var streaming = false;
  const video = Q("#video"),
    canvas = Q("#canvas"),
    photo = Q("#photo"),
    startbutton = Q("#startbutton");
  let filter;

  navigator.mediaDevices
    .getUserMedia({
      video: true,
      audio: false,
    })
    .then(function (stream) {
      video.srcObject = stream;
      video.play();
    })
    .catch(function (err) {
      console.log("An error occurred!" + err);
    });

  video.addEventListener(
    "canplay",
    function (ev) {
      if (!streaming) {
        height = video.videoHeight / (video.videoWidth / width);

        video.width = canvas.width = width;
        video.height = canvas.height = height;
        streaming = true;
      }
    },
    false
  );

  startbutton.addEventListener(
    "click",
    function (ev) {
      takepicture();
      ev.preventDefault();
    },
    false
  );
  clearphoto();

  function clearphoto() {
    var context = canvas.getContext("2d");
    context.fillStyle = "#AAA";
    context.fillRect(0, 0, canvas.width, canvas.height);

    var data = canvas.toDataURL("image/png");
    photo.setAttribute("src", data);
  }

  function takepicture() {
    var context = canvas.getContext("2d");
    if (width && height) {
      canvas.width = width;
      canvas.height = height;
      context.drawImage(video, 0, 0, width, height);
      context.filter = filter;
      var data = canvas.toDataURL("image/png");
      photo.setAttribute("src", data);
    } else clearphoto();
  }
  Q("a[download]").onclick = function () {
    this.href = URL.createObjectURL(new Blob([photo]));
  };
  let x;
  Q('input[type="range"]').oninput = function changebright() {
    video.style.filter =
      photo.filter =
      filter =
      canvas.style.filter =
        `brightness(${(x = this.value)})`;
    Q("#data").innerHTML = x;
  };
</script>
